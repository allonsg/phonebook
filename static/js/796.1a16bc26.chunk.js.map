{"version":3,"file":"static/js/796.1a16bc26.chunk.js","mappings":"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","sources":["components/Contacts/ContactListItem/ContactListItem.styled.js","components/Contacts/ContactListItem/ContactListItem.jsx","components/Contacts/Contacts.styled.js","components/ContactActionForm/ContactActionForm.jsx","components/Contacts/Contacts.jsx","views/ContactsView/ContactView.styled.js","HOC/WithAuthRedirect.jsx","views/ContactsView/ContactsView.jsx"],"sourcesContent":["import styled from 'styled-components';\r\nimport { FaUser } from 'react-icons/fa';\r\nimport { CiEdit } from 'react-icons/ci';\r\nimport { BsTrash } from 'react-icons/bs';\r\n\r\nexport const Card = styled.li`\r\n  max-width: 320px;\r\n  min-width: 260px;\r\n  height: 150px;\r\n  background: whitesmoke;\r\n  transition: 0.2s linear;\r\n  box-shadow: 1px 1px 10px lightslategray;\r\n  cursor: default;\r\n  border-radius: 5px;\r\n`;\r\n\r\nexport const CardTopPart = styled.div`\r\n  width: 100%;\r\n  height: 70%;\r\n  padding: 15px;\r\n  display: flex;\r\n  gap: 20px;\r\n`;\r\n\r\nexport const LeftPart = styled.div`\r\n  width: 70%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-around;\r\n`;\r\n\r\nexport const ContactName = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start;\r\n  gap: 10px;\r\n`;\r\n\r\nexport const Name = styled.p`\r\n  font-size: 24px;\r\n  margin: 0;\r\n`;\r\n\r\nexport const ContactInfo = styled.div``;\r\n\r\nexport const ContactPhone = styled.p`\r\n  color: grey;\r\n  margin: 0;\r\n`;\r\n\r\nexport const RightPart = styled.div`\r\n  width: 30%;\r\n  height: 100%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const UserBlock = styled.div`\r\n  width: 70px;\r\n  height: 70px;\r\n  overflow: hidden;\r\n  border-radius: 50%;\r\n  border: 1px solid rgb(231, 227, 227);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const UserIcon = styled(FaUser)`\r\n  width: 40px;\r\n  height: 40px;\r\n  fill: ${props => props.theme.userIcon};\r\n`;\r\n\r\nexport const CardBottomPart = styled.div`\r\n  width: 100%;\r\n  height: 30%;\r\n  display: flex;\r\n  border: 1px solid rgb(231, 227, 227);\r\n  border-bottom-left-radius: inherit;\r\n  border-bottom-right-radius: inherit;\r\n\r\n  & :first-child:hover > p {\r\n    color: #5585b5;\r\n  }\r\n\r\n  & :nth-child(2n):hover > p {\r\n    color: red;\r\n  }\r\n`;\r\n\r\nexport const BottomPart = styled.button`\r\n  width: 50%;\r\n  height: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  justify-content: center;\r\n  cursor: pointer;\r\n  border: none;\r\n  border-radius: inherit;\r\n\r\n  :hover > p {\r\n    transform: scale(1.1);\r\n  }\r\n\r\n  :first-child {\r\n    border-right: 1px solid rgb(231, 227, 227);\r\n    border-bottom-right-radius: unset;\r\n  }\r\n`;\r\n\r\nexport const ActionButton = styled.p`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  font-size: 14px;\r\n  gap: 5.5px;\r\n  font-weight: bold;\r\n  transition: 0.2s linear;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const Icon = styled.span`\r\n  width: fit-content;\r\n  height: fit-content;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const EditIcon = styled(CiEdit)`\r\n  width: 20px;\r\n  height: 20px;\r\n`;\r\n\r\nexport const TrashIcon = styled(BsTrash)`\r\n  width: 20px;\r\n  height: 20px;\r\n`;\r\n","import {\r\n    ActionButton,\r\n    BottomPart,\r\n    Card,\r\n    CardBottomPart,\r\n    CardTopPart,\r\n    ContactInfo,\r\n    ContactName,\r\n    ContactPhone,\r\n    EditIcon,\r\n    Icon,\r\n    LeftPart,\r\n    Name,\r\n    RightPart,\r\n    TrashIcon,\r\n    UserBlock,\r\n    UserIcon,\r\n} from \"./ContactListItem.styled\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const ContactListItem = ({ name, number, onDelete, id, onEdit }) => {\r\n    return (\r\n        <Card>\r\n            <CardTopPart>\r\n                <LeftPart>\r\n                    <ContactName>\r\n                        <Name>{name}</Name>\r\n                    </ContactName>\r\n                    <ContactInfo>\r\n                        <ContactPhone>\r\n                            {number}\r\n                        </ContactPhone>\r\n                    </ContactInfo>\r\n                </LeftPart>\r\n                <RightPart>\r\n                    <UserBlock>\r\n                        <UserIcon />\r\n                    </UserBlock>\r\n                </RightPart>\r\n            </CardTopPart>\r\n            <CardBottomPart>\r\n                <BottomPart onClick={() => onEdit({ name, number, id })}>\r\n                    <ActionButton >\r\n                        <Icon>\r\n                            <EditIcon/>\r\n                        </Icon>\r\n                        Edit\r\n                    </ActionButton>\r\n                </BottomPart>\r\n                <BottomPart onClick={() => onDelete(id)}>\r\n                    <ActionButton >\r\n                        <Icon>\r\n                            <TrashIcon/>\r\n                        </Icon>\r\n                        Delete\r\n                    </ActionButton>\r\n                </BottomPart>\r\n            </CardBottomPart>\r\n        </Card>\r\n    );\r\n}\r\n\r\n\r\n\r\nContactListItem.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n    number: PropTypes.node.isRequired,\r\n    onDelete: PropTypes.func.isRequired,\r\n    onEdit: PropTypes.func.isRequired,\r\n};","import styled from 'styled-components';\r\n\r\nexport const List = styled.ul`\r\n  padding: 0;\r\n  margin: 0;\r\n  list-style: none;\r\n  display: flex;\r\n  gap: 15px;\r\n  flex-wrap: wrap;\r\n  justify-content: center;\r\n  width: 70%;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const FiltertInputWrapper = styled.div`\r\n  position: relative;\r\n  width: 70%;\r\n\r\n  &:before {\r\n    transition: 200ms cubic-bezier(0.4, 0, 0.2, 1) 0ms;\r\n    border-bottom: 1px solid rgba(0, 0, 0, 0.42);\r\n  }\r\n\r\n  &:after {\r\n    content: '';\r\n    transform: scaleX(0);\r\n    transition: transform 250ms cubic-bezier(0, 0, 0.2, 1) 0ms;\r\n    will-change: transform;\r\n    border-bottom: 2px solid ${props => props.theme.underlineColor};\r\n    border-bottom-color: ${props => props.theme.underlineColor};\r\n  }\r\n\r\n  &:before,\r\n  &:after {\r\n    content: '';\r\n    left: 4px;\r\n    right: 0;\r\n    position: absolute;\r\n    pointer-events: none;\r\n    bottom: 0px;\r\n    width: 99.3%;\r\n    border-bottom: 1px solid ${props => props.theme.bgFilter};\r\n  }\r\n\r\n  &:focus-within:before {\r\n    border-bottom: 1px solid ${props => props.theme.underlineColor};\r\n    transform: scaleX(1);\r\n  }\r\n\r\n  &:focus-within:after {\r\n    border-bottom: 2px solid ${props => props.theme.underlineColor};\r\n    transform: scaleX(1);\r\n  }\r\n\r\n  :focus-within input {\r\n    background-color: ${props => props.theme.bgFilter};\r\n    color: ${props => props.theme.filterColor};\r\n  }\r\n\r\n  :focus-within input::placeholder {\r\n    opacity: 0;\r\n  }\r\n`;\r\n\r\nexport const FilterInput = styled.input`\r\n  border-radius: 5px;\r\n  box-shadow: 0px 2px 5px rgb(35 35 35 / 30%);\r\n  max-height: 50px;\r\n  background-color: ${props => props.theme.bgFilter};\r\n  transition-timing-function: cubic-bezier(0.25, 0.8, 0.25, 1);\r\n  transition-duration: 200ms;\r\n  transition-property: background-color;\r\n  color: ${props => props.theme.filterColor};\r\n  font-size: 1.2rem;\r\n  line-height: 1.2;\r\n  font-weight: 500;\r\n  padding: 12px;\r\n  width: 100%;\r\n  border: none;\r\n\r\n  :focus,\r\n  :active {\r\n    outline: none;\r\n    background-color: #353535;\r\n  }\r\n\r\n  &::placeholder {\r\n    transition: opacity 250ms cubic-bezier(0, 0, 0.2, 1) 0ms;\r\n    opacity: 1;\r\n    user-select: none;\r\n    color: ${props => props.theme.filterColor};\r\n    font-size: 1.2rem;\r\n    line-height: 1.2;\r\n  }\r\n`;\r\n\r\nexport const AddContactText = styled.h2`\r\n  color: ${props => props.theme.filterColor};\r\n`;\r\n\r\nexport const AddLink = styled.span`\r\n  text-decoration: underline;\r\n`;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { editContact } from \"redux/contactsSlice\";\r\nimport { Form, UserBox } from \"common/formStyles/formStyles\";\r\nimport { ContactActionBox, ContactButton, ContactHeader, ContactInput, ContactLabel } from \"common/contactFormStyles/contactFormStyles\";\r\nimport { toast } from 'react-toastify';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const ContactActionForm = ({ prevContact, handleModal }) => {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  useEffect(() => {\r\n    setName(prevContact.name);\r\n    setNumber(prevContact.number);\r\n  }, [prevContact.name, prevContact.number])\r\n  \r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case 'name':\r\n        return setName(value);\r\n      case 'number':\r\n        return setNumber(value);\r\n      default:\r\n        return;\r\n    };\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n      \r\n    const formData = {\r\n      name,\r\n      number,\r\n    }\r\n\r\n    const finalData = {\r\n      formData,\r\n      id: prevContact.id,\r\n    }\r\n\r\n    dispatch(editContact(finalData));\r\n\r\n    setName('');\r\n    setNumber('');\r\n    handleModal();\r\n\r\n    toast.success(\"Contact edited!\", {\r\n      position: toast.POSITION.TOP_RIGHT\r\n    });\r\n  };\r\n\r\n  return (\r\n    <ContactActionBox>\r\n      <ContactHeader>\r\n        Edit Contact\r\n      </ContactHeader>\r\n      <Form onSubmit={handleSubmit}>\r\n        <UserBox>\r\n          <ContactInput type=\"name\" name='name' value={name} onChange={handleChange} />\r\n          <ContactLabel text={!!name}>Name</ContactLabel>\r\n        </UserBox>\r\n        <UserBox>\r\n          <ContactInput type=\"text\" name='number' value={number} onChange={handleChange} />\r\n          <ContactLabel text={!!number}>Number</ContactLabel>\r\n        </UserBox>\r\n        <ContactButton type=\"submit\">Edit</ContactButton>\r\n      </Form>\r\n    </ContactActionBox>\r\n  );\r\n};\r\n\r\nContactActionForm.propTypes = {\r\n    prevContact: PropTypes.object.isRequired,\r\n    handleModal: PropTypes.func.isRequired,\r\n};","import { useDispatch, useSelector } from \"react-redux\";\r\nimport {deleteContact, getContacts, removeContact } from '../../redux/contactsSlice';\r\nimport { ContactListItem } from './ContactListItem/ContactListItem.jsx';\r\nimport { AddContactText, FilterInput, FiltertInputWrapper, List } from \"./Contacts.styled\";\r\nimport { useState } from \"react\";\r\nimport { Modal } from \"components/Modal/Modal\";\r\nimport { ContactActionForm } from \"components/ContactActionForm/ContactActionForm\";\r\nimport { toast } from \"react-toastify\";\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Contacts = ({ onFilterSearch, filter}) => {\r\n  const contactList = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n  const [modalIsOpened, setModalIsOpened] = useState(false);\r\n  const [editContact, setEditContact] = useState({});\r\n \r\n  const onDelete = id => {\r\n    dispatch(removeContact(id));\r\n    const updatedContacts = contactList.filter(\r\n      contact => contact.id !== id\r\n    );\r\n\r\n    dispatch(deleteContact(updatedContacts));\r\n\r\n    toast.success(\"Contact deleted!\", {\r\n      position: toast.POSITION.TOP_RIGHT\r\n    });\r\n  }\r\n\r\n  const handleModal = (obj) => {\r\n    setModalIsOpened(s => !s);\r\n    setEditContact(obj);\r\n  }\r\n\r\n  const filtredContacts = contactList.filter(({ name }) =>\r\n    name.toLowerCase().startsWith(filter.toLowerCase().trim())\r\n  );\r\n\r\n  const filtredList = filtredContacts.length > 0\r\n    ?\r\n    filtredContacts.map(({ name, id, number }) => (<ContactListItem key={id} name={name} id={id} number={number} onDelete={onDelete} onEdit={handleModal} /> )) \r\n    :\r\n    contactList.length > 0? <AddContactText>You have no contacts with that name :(</AddContactText> : <AddContactText>You have no contacts, so just add them!</AddContactText>;\r\n\r\n  const list = contactList.length > 0\r\n    ?\r\n    contactList.map(({ name, id, number }) => (<ContactListItem key={id} name={name} id={id} number={number} onDelete={onDelete} onEdit={handleModal} /> ))\r\n    :\r\n    <AddContactText>You have no contacts, so just add them!</AddContactText>;\r\n\r\n  return (\r\n    <>\r\n      <FiltertInputWrapper>\r\n       <FilterInput\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          onChange={onFilterSearch}\r\n          value={filter}\r\n          autoComplete= 'off'\r\n          placeholder = 'Find contacts by name'\r\n        />\r\n      </FiltertInputWrapper>\r\n      <List>\r\n        {filter? filtredList : list}\r\n      </List>\r\n            {modalIsOpened && <Modal closeModal={handleModal} modalIsOpened = {modalIsOpened}>\r\n        <ContactActionForm prevContact={editContact} handleModal={handleModal} />\r\n      </Modal>}\r\n    </>\r\n  );\r\n};\r\n\r\nContacts.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onFilterSearch: PropTypes.func.isRequired,\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  padding: 40px;\r\n  width: 100%;\r\n  gap: 20px;\r\n\r\n  @media screen and (max-width: 768px) {\r\n    padding: 10px 0;\r\n  }\r\n`;\r\n","import { getUser } from \"redux/userSlice\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nfunction WithAuthRedirect (Component, navigateTo) {\r\n    const ComponentWithRedirect = props => {\r\n        const user = useSelector(getUser);\r\n        return !!user ? <Component {...props} /> : <Navigate to={navigateTo}/>\r\n    }\r\n    return ComponentWithRedirect;\r\n}\r\n\r\nWithAuthRedirect.propTypes = {\r\n    navigateTo: PropTypes.string.isRequired,\r\n    Component: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default WithAuthRedirect;\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setFilter, getFilter, fetchContacts } from 'redux/contactsSlice';\r\nimport { Contacts } from 'components/Contacts/Contacts';\r\nimport { Container } from './ContactView.styled';\r\nimport { getUser } from 'redux/userSlice';\r\nimport WithAuthRedirect from 'HOC/WithAuthRedirect';\r\nimport { Helmet } from 'react-helmet-async';\r\n\r\nconst ContactsView = () => {\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(getUser);\r\n\r\n  useEffect(() => {\r\n    if (!user) return;\r\n    dispatch(fetchContacts());\r\n  }, [dispatch, user]);\r\n\r\n  const onFilterSearch = e => {\r\n    dispatch(setFilter(e.target.value));\r\n  };\r\n\r\n  return (<>\r\n    <Helmet>\r\n        <title>My Contacts</title>\r\n      </Helmet>\r\n    <Container>\r\n      {!!user ? <>\r\n      <Contacts\r\n        onFilterSearch={onFilterSearch}\r\n        filter={filter}\r\n      /></>:  <h1> Log In to get access to ur contacts</h1>}\r\n    </Container>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default WithAuthRedirect(ContactsView, '/login');\r\n\r\n"],"names":["Card","styled","CardTopPart","LeftPart","ContactName","Name","ContactInfo","ContactPhone","RightPart","UserBlock","UserIcon","FaUser","props","theme","userIcon","CardBottomPart","BottomPart","ActionButton","Icon","EditIcon","CiEdit","TrashIcon","BsTrash","ContactListItem","name","number","onDelete","id","onEdit","onClick","List","FiltertInputWrapper","underlineColor","bgFilter","filterColor","FilterInput","AddContactText","ContactActionForm","prevContact","handleModal","dispatch","useDispatch","useState","setName","setNumber","useEffect","handleChange","target","value","onSubmit","e","preventDefault","finalData","formData","editContact","toast","position","type","onChange","text","Contacts","onFilterSearch","filter","contactList","useSelector","getContacts","modalIsOpened","setModalIsOpened","setEditContact","removeContact","updatedContacts","contact","deleteContact","obj","s","filtredContacts","toLowerCase","startsWith","trim","filtredList","length","map","list","autoComplete","placeholder","Modal","closeModal","Container","Component","navigateTo","getUser","to","WithAuthRedirect","getFilter","user","fetchContacts","setFilter"],"sourceRoot":""}