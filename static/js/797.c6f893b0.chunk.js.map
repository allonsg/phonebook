{"version":3,"file":"static/js/797.c6f893b0.chunk.js","mappings":"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","sources":["HOC/WithAuthRedirect.jsx","components/ContactForm/ContactForm.styled.js","components/components.styled.js","components/ContactForm/ContactForm.jsx","components/Phonebook/Phonebook.jsx","components/Contacts/FiltredContacts/FiltredContatcs.styled.js","components/Contacts/FiltredContacts/FiltredContacts.jsx","components/Contacts/Contacts.styled.js","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/ModalForm/ModalForm.styled.js","components/ModalForm/ModalForm.jsx","components/Contacts/Contacts.jsx","views/ContactsView/ContactsView.jsx"],"sourcesContent":["import { getUser } from \"redux/userSlice\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nfunction WithAuthRedirect (Component, navigateTo) {\r\n    const ComponentWithRedirect = props => {\r\n        const user = useSelector(getUser);\r\n        return !!user ? <Component {...props} /> : <Navigate to={navigateTo}/>\r\n    }\r\n    return ComponentWithRedirect;\r\n}\r\n\r\nWithAuthRedirect.propTypes = {\r\n    navigateTo: PropTypes.string.isRequired,\r\n    Component: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default WithAuthRedirect;\r\n","import styled from 'styled-components';\r\n\r\nexport const Form = styled.form`\r\n  min-width: 200px;\r\n  width: 50%;\r\n  padding: 10px;\r\n  border: 1px solid black;\r\n`;","import styled from 'styled-components';\r\n\r\nexport const Button = styled.button`\r\n  padding: 2px 10px;\r\n  border: 0;\r\n  border-radius: 5px;\r\n  font-size: 12px;\r\n  cursor: pointer;\r\n  box-shadow: rgba(50, 50, 93, 0.25) 0px 50px 100px -20px,\r\n    rgba(0, 0, 0, 0.3) 0px 30px 60px -30px,\r\n    rgba(10, 37, 64, 0.35) 0px -2px 6px 0px inset;\r\n  :hover {\r\n    background-color: blue;\r\n    color: white;\r\n    box-shadow: rgba(0, 0, 0, 0.35) 0px 5px 15px;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: block;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  display: block;\r\n  margin-top: 10px;\r\n  margin-bottom: 20px;\r\n`;\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { addContact, getContacts } from 'redux/contactsSlice';\r\nimport { Form} from './ContactForm.styled';\r\nimport { Label, Input } from '../components.styled';\r\nimport { Button } from 'components/components.styled';\r\n\r\nexport const ContactForm = () => {\r\n  const dispatch = useDispatch();\r\n  const contacts = useSelector(getContacts);\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    const { name, number } = e.target.elements;\r\n    const existingContact = contacts.find(\r\n      contact => contact.name.toLowerCase().includes(name.value.toLowerCase())\r\n    );\r\n\r\n    if (existingContact) {\r\n      alert(`${name.value} is already in contacts!`);\r\n      return;\r\n    };\r\n\r\n    const obj = {\r\n      name: name.value,\r\n      number: number.value.toString(),\r\n    };\r\n\r\n     dispatch(addContact(obj));\r\n\r\n    number.value = '';\r\n    name.value = '';\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Label>\r\n        Name:\r\n        <Input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n        />\r\n      </Label>\r\n      <Label>\r\n        Tel:\r\n        <Input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n        />\r\n      </Label>\r\n      <Button type=\"submit\">Add contact</Button>\r\n    </Form>\r\n  );\r\n};","import { ContactForm } from '../ContactForm/ContactForm';\r\n\r\nexport const Phonebook = () => {\r\n  return (\r\n    <>\r\n      <h1>Phonebook</h1>\r\n      <ContactForm/>\r\n    </>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nexport const ContactItem = styled.li`\r\n  display: flex;\r\n  gap: 10px;\r\n  margin-bottom: 5px;\r\n`;\r\n","import { Button } from \"components/components.styled\";\r\nimport { ContactItem } from \"./FiltredContatcs.styled\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const FiltredContacts = ({ name, number, onDelete, id, onEdit }) => {\r\n    return (\r\n        <ContactItem>\r\n            {name}: {number}\r\n            <Button type=\"button\" onClick={() => onDelete(id)}>\r\n                Delete\r\n            </Button>\r\n            <Button type=\"button\" onClick={() => onEdit({ name, number, id })}>\r\n                Edit\r\n            </Button>\r\n        </ContactItem>\r\n    );\r\n};\r\n\r\nFiltredContacts.propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    id: PropTypes.string.isRequired,\r\n    number: PropTypes.node.isRequired,\r\n    onDelete: PropTypes.func.isRequired,\r\n};\r\n\r\n","import styled from 'styled-components';\r\n\r\nexport const List = styled.ul`\r\n  padding: 0;\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const ModalWindow = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nexport const ModalContent = styled.div`\r\n  position: absolute;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  min-height: 330px;\r\n  max-width: 550px;\r\n  width: 100%;\r\n  padding: 12px;\r\n  background-color: white;\r\n  border-radius: 4px;\r\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2),\r\n    0px 1px 1px 0 rgba(0, 0, 0, 0.14), 0 1px 3px 0 rgba(0, 0, 0, 0.12);\r\n`;\r\n","import React, {useCallback, useEffect} from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { ModalWindow, ModalContent } from './Modal.styled';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.querySelector('#modal-root')\r\n\r\nexport const Modal = ({ closeModal, modalIsOpened, children }) => {\r\n    const toggleModalCallback = useCallback(\r\n        (e) => {\r\n            if (e.code !== 'Escape') return;\r\n            closeModal();\r\n        },\r\n        [closeModal],\r\n    );\r\n\r\n    useEffect(() => {\r\n        window.addEventListener('keydown', toggleModalCallback);\r\n        return () => {\r\n            window.removeEventListener('keydown', toggleModalCallback);\r\n        };\r\n    }, [modalIsOpened, toggleModalCallback]);\r\n\r\n    const onClick = e => {\r\n        if (e.target === e.currentTarget) closeModal();\r\n    };\r\n\r\n    return (\r\n        createPortal(\r\n            <ModalWindow onClick={onClick}>\r\n                <ModalContent>{children}</ModalContent>\r\n            </ModalWindow>, modalRoot\r\n        )\r\n    );\r\n};\r\n\r\nModal.propTypes = {\r\n    closeModal: PropTypes.func.isRequired,\r\n    modalIsOpened: PropTypes.bool.isRequired,\r\n    children: PropTypes.node.isRequired,\r\n};","import styled from 'styled-components';\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  gap: 10px;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: flex;\r\n  flex-display: column;\r\n  gap: 5px;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: gray;\r\n  border: none;\r\n  border-radius: 4px;\r\n  color: white;\r\n  font-size: 18px;\r\n  cursor: pointer;\r\n\r\n  &:disabled {\r\n    border: 1px solid #999999;\r\n    background-color: #cccccc;\r\n    color: #666666;\r\n  }\r\n`;\r\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { editContact } from \"redux/contactsSlice\";\r\nimport { Button, Form, Label } from \"./ModalForm.styled\"\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const ModalForm = ({prevContact, handleModal}) => {\r\n  const dispatch = useDispatch();\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  useEffect(() => {\r\n   setName(prevContact.name);\r\n   setNumber(prevContact.number);\r\n  }, [prevContact.name, prevContact.number])\r\n  \r\n\r\n  const handleChange = ({ target: { name, value } }) => {\r\n    switch (name) {\r\n      case 'name':\r\n        return setName(value);\r\n      case 'number':\r\n        return setNumber(value);\r\n      default:\r\n        return;\r\n    };\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n      \r\n    const formData = {\r\n      name,\r\n      number,\r\n    }\r\n\r\n    const finalData = {\r\n      formData,\r\n      id: prevContact.id,\r\n    }\r\n\r\n    dispatch(editContact(finalData));\r\n\r\n    setName('');\r\n    setNumber('');\r\n    handleModal();\r\n  };\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      <Label>Name:\r\n        <input type=\"name\" name='name' value={name} onChange={handleChange} />\r\n      </Label>\r\n      <Label>Number:\r\n        <input type=\"text\" name='number' value={number} onChange={handleChange} />\r\n      </Label>\r\n      <Button type=\"submit\">Edit</Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nModalForm.propTypes = {\r\n    prevContact: PropTypes.object.isRequired,\r\n    handleModal: PropTypes.func.isRequired,\r\n};","import { useDispatch, useSelector } from \"react-redux\";\r\nimport {deleteContact, getContacts, removeContact } from '../../redux/contactsSlice';\r\nimport { FiltredContacts } from './FiltredContacts/FiltredContacts';\r\nimport PropTypes from 'prop-types';\r\nimport { Label, Input } from '../components.styled';\r\nimport { List } from \"./Contacts.styled\";\r\nimport { useState } from \"react\";\r\nimport { Modal } from \"components/Modal/Modal\";\r\nimport { ModalForm } from \"components/ModalForm/ModalForm\";\r\n\r\nexport const Contacts = ({ onFilterSearch, filter}) => {\r\n  const contactList = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n  const [modalIsOpened, setModalIsOpened] = useState(false);\r\n  const [editContact, setEditContact] = useState({});\r\n \r\n\r\n  const onDelete = id => {\r\n    dispatch(removeContact(id));\r\n    const updatedContacts = contactList.filter(\r\n      contact => contact.id !== id\r\n    );\r\n\r\n    dispatch(deleteContact(updatedContacts));\r\n  }\r\n\r\n  const handleModal = (obj) => {\r\n    setModalIsOpened(s => !s);\r\n    setEditContact(obj);\r\n  }\r\n\r\n  const filtredContacts = contactList.filter(({ name }) =>\r\n    name.toLowerCase().startsWith(filter.toLowerCase())\r\n  );\r\n\r\n  const list = filtredContacts.map(({ name, id, number }) => (\r\n    <FiltredContacts key={id} name={name} id={id} number={number} onDelete={onDelete} onEdit={handleModal} />\r\n  ));\r\n\r\n  return (\r\n    <>\r\n      <h2>Contacts</h2>\r\n      <Label>\r\n        Find contacts by name\r\n        <Input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          onChange={onFilterSearch}\r\n          value={filter}\r\n        />\r\n      </Label>\r\n      <List>\r\n        {list}\r\n      </List>\r\n            {modalIsOpened && <Modal closeModal={handleModal} modalIsOpened = {modalIsOpened}>\r\n        <ModalForm prevContact={editContact} handleModal={handleModal} />\r\n      </Modal>}\r\n    </>\r\n  );\r\n};\r\n\r\nContacts.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  onFilterSearch: PropTypes.func.isRequired,\r\n};\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setFilter, getFilter, fetchContacts } from 'redux/contactsSlice';\r\nimport { Phonebook } from 'components/Phonebook/Phonebook';\r\nimport { Contacts } from 'components/Contacts/Contacts';\r\nimport { Container} from 'components/App.styled';\r\nimport { getUser } from 'redux/userSlice';\r\nimport WithAuthRedirect from 'HOC/WithAuthRedirect';\r\n\r\nconst ContactsView = () => {\r\n  const filter = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(getUser);\r\n\r\n  useEffect(() => {\r\n    if (!user) return;\r\n    dispatch(fetchContacts());\r\n  }, [dispatch, user]);\r\n\r\n  const onFilterSearch = e => {\r\n    dispatch(setFilter(e.target.value));\r\n  };\r\n\r\n  return (<>\r\n    <Container>\r\n      {!!user?<><Phonebook />\r\n      <Contacts\r\n        onFilterSearch={onFilterSearch}\r\n        filter={filter}\r\n      /></>:  <h1> Log In to get access to ur contacts</h1>}\r\n    </Container>\r\n  </>\r\n  );\r\n}\r\n\r\nexport default WithAuthRedirect(ContactsView, '/phonebook/login');\r\n\r\n"],"names":["Component","navigateTo","props","useSelector","getUser","to","Form","styled","Button","Label","Input","ContactForm","dispatch","useDispatch","contacts","getContacts","onSubmit","e","preventDefault","target","elements","name","number","find","contact","toLowerCase","includes","value","alert","obj","toString","addContact","type","pattern","title","required","Phonebook","ContactItem","FiltredContacts","onDelete","id","onEdit","onClick","List","ModalWindow","ModalContent","modalRoot","document","querySelector","Modal","closeModal","modalIsOpened","children","toggleModalCallback","useCallback","code","useEffect","window","addEventListener","removeEventListener","createPortal","currentTarget","ModalForm","prevContact","handleModal","useState","setName","setNumber","handleChange","finalData","formData","editContact","onChange","Contacts","onFilterSearch","filter","contactList","setModalIsOpened","setEditContact","removeContact","updatedContacts","deleteContact","s","list","startsWith","map","WithAuthRedirect","getFilter","user","fetchContacts","setFilter"],"sourceRoot":""}